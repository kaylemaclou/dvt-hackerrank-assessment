{"version":3,"sources":["theme/deezer-app-theme.ts","components/DeezerAppBar.tsx","model/Title.ts","model/Track.ts","services/DeezerApiHttpClient.ts","components/FindTitlesView.tsx","components/CardView.tsx","components/AlbumView.tsx","components/MainView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["deezerAppTheme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","error","warning","info","success","typography","fontFamily","join","useStyles","makeStyles","theme","root","flex","backgroundImage","marginBottom","color","title","flexGrow","paddingLeft","imageIcon","height","width","iconRoot","textAlign","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","letterSpacing","content","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","icon","link","textDecoration","DeezerAppBar","props","classes","useTheme","React","useState","open","setOpen","className","AppBar","position","style","background","Toolbar","IconButton","aria-label","onClick","edge","Icon","Typography","src","Badge","badgeContent","aria-haspopup","Drawer","variant","anchor","paper","gutterBottom","paddingRight","direction","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","to","Title","uniqueKey","description","artistName","this","process","Math","round","toString","length","Track","DeezerApiHttpClient","searchString","Promise","resolve","reject","a","fetch","method","headers","Headers","then","response","json","rawTitlesData","console","log","data","map","rawTitleData","parseInt","titles","Error","message","tracksUrl","rawTracksData","rawTrackData","tracks","paperContainer","verticalAlign","margin","border","backgroundColor","searchCriterionTextField","searchButton","FindTitlesView","searchButtonClickHandler","searchCriterion","setSearchCriterion","Paper","TextField","label","value","onChange","event","target","onKeyPress","Button","maxWidth","boxShadow","CardView","imageUrl","subtitle1","subtitle2","onClickHandler","Card","CardActionArea","CardMedia","component","alt","image","CardContent","fontWeight","gridContainer","AlbumView","isOpen","closeHandler","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Grid","container","justify","item","xs","sm","md","DialogActions","overflowY","overflowX","MainView","setTitles","selectedTitle","setSelectedTitle","isLoading","setIsLoading","errorMessage","setErrorMessage","isErrorSnackbarOpen","setIsErrorSnackbarOpen","isAlbumViewOpen","setIsAlbumViewOpen","trim","searchForTitles","titlesFound","LinearProgress","formatedDuration","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","App","ThemeProvider","CssBaseline","flexDirection","overflow","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"6QAEaA,EAAiBC,YAAe,CAC3CC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBE,MAAO,CACLL,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBG,QAAS,CACPN,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBI,KAAM,CACJP,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBK,QAAS,CACPR,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,SAIlBM,WAAY,CACVC,WAAY,CAAC,cAAe,UAAUC,KAAK,Q,4RCZzCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,KAAM,EACNC,gBAAiB,4CACjBC,aAAc,EACdC,MAAO,UAETC,MAAO,CACLC,SAAU,EACVC,YAAa,OAEfC,UAAW,CACTC,OAAQ,OACRC,MAAO,QAETC,SAAU,CACRC,UAAW,SACXF,MAAO,QACPD,OAAQ,SAGVI,WAAY,CACVC,YAAaf,EAAMgB,QAAQ,IAE7BC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNR,MA9BgB,IA+BhBS,WAAY,EACZf,MAAO,cAETgB,YAAa,CACXlB,gBACE,2EACFQ,MArCgB,IAsChBN,MAAO,cAETiB,aAAa,yBACXJ,QAAS,OACTK,WAAY,SACZC,QAASxB,EAAMgB,QAAQ,EAAG,IAEvBhB,EAAMyB,OAAOC,SALN,IAMVC,eAAgB,WAChBtB,MAAO,aACPuB,cAAe,IAEjBC,QAAS,CACPtB,SAAU,EACViB,QAASxB,EAAMgB,QAAQ,GACvBc,WAAY9B,EAAM+B,YAAYC,OAAO,SAAU,CAC7CC,OAAQjC,EAAM+B,YAAYE,OAAOC,MACjCC,SAAUnC,EAAM+B,YAAYI,SAASC,gBAEvCC,YAzDgB,KA2DlBC,aAAc,CACZR,WAAY9B,EAAM+B,YAAYC,OAAO,SAAU,CAC7CC,OAAQjC,EAAM+B,YAAYE,OAAOM,QACjCJ,SAAUnC,EAAM+B,YAAYI,SAASK,iBAEvCH,WAAY,GAEdI,KAAM,CACJpC,MAAO,cAETqC,KAAM,CACJC,eAAgB,OAChBtC,MAAO,kBAII,SAASuC,EAAaC,GACnC,IAAMC,EAAUhD,IACVE,EAAQ+C,cAEd,EAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,OACE,oCACE,yBAAKC,UAAWN,EAAQ7C,MACtB,kBAACoD,EAAA,EAAD,CACEC,SAAS,SACTC,MAAO,CACLC,WAAY,cACZnD,MAAO,WAGT,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACErD,MAAM,UACNsD,aAAW,cACXC,QAtBa,WACvBT,GAAQ,IAsBEU,KAAK,QACLT,UAAWN,EAAQhC,YAEnB,kBAAC,IAAD,OAGF,kBAACgD,EAAA,EAAD,CAAMhB,QAAS,CAAE7C,KAAM6C,EAAQlC,YAC/B,kBAACmD,EAAA,EAAD,CAAYX,UAAWN,EAAQxC,OAC7B,yBACE8C,UAAWN,EAAQrC,UACnB8C,MAAO,CAAE5C,MAAO,SAChBqD,IAAI,gCAGR,oCACE,kBAACN,EAAA,EAAD,CACEC,aAAW,wCACXtD,MAAM,WAEN,kBAAC4D,EAAA,EAAD,CAAOC,aAAc,EAAG7D,MAAM,WAC5B,kBAAC,IAAD,QAGJ,kBAACqD,EAAA,EAAD,CAAYG,KAAK,MAAMM,gBAAc,OAAO9D,MAAM,WAChD,kBAAC,IAAD,WAOV,kBAAC+D,EAAA,EAAD,CACEhB,UAAWN,EAAQ3B,OACnBkD,QAAQ,aACRC,OAAO,OACPpB,KAAMA,EACNJ,QAAS,CACPyB,MAAOzB,EAAQzB,cAGjB,yBAAK+B,UAAWN,EAAQxB,cACtB,kBAACwC,EAAA,EAAD,CAAMhB,QAAS,CAAE7C,KAAM6C,EAAQlC,YAE/B,kBAACmD,EAAA,EAAD,CACEM,QAAQ,SACRnD,QAAQ,QACRsD,cAAY,EACZjB,MAAO,CAAEkB,aAAc,OAAQpE,MAAO,WAJxC,iBASA,kBAACqD,EAAA,EAAD,CACEH,MAAO,CAAEkB,aAAc,OAAQpE,MAAO,UACtCuD,QAzEgB,WACxBT,GAAQ,KA0EqB,QAApBnD,EAAM0E,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIN,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,gBAAgB1E,MAAM,SACzC,kBAAC2E,EAAA,EAAD,CAAc5B,UAAWN,EAAQL,MAC/B,kBAAC,IAAD,OAEF,kBAACwC,EAAA,EAAD,CAAchG,QAAQ,YAExB,kBAAC,IAAD,CAAMiG,GAAG,IAAI9B,UAAWN,EAAQJ,MAC9B,kBAACmC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,UACnB,kBAACC,EAAA,EAAD,CAAc5B,UAAWN,EAAQL,MAC/B,kBAAC,IAAD,OAEF,kBAACwC,EAAA,EAAD,CAAchG,QAAQ,YAG1B,kBAAC,IAAD,CAAMiG,GAAG,WAAW9B,UAAWN,EAAQJ,MACrC,kBAACmC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,WACnB,kBAACC,EAAA,EAAD,CAAc5B,UAAWN,EAAQL,MAC/B,kBAAC,IAAD,OAEF,kBAACwC,EAAA,EAAD,CAAchG,QAAQ,cAG1B,kBAAC,IAAD,CAAMiG,GAAG,UAAU9B,UAAWN,EAAQJ,MACpC,kBAACmC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,UACnB,kBAACC,EAAA,EAAD,CAAc5B,UAAWN,EAAQL,MAC/B,kBAAC,IAAD,OAEF,kBAACwC,EAAA,EAAD,CAAchG,QAAQ,cAI5B,kBAAC0F,EAAA,EAAD,Q,2FCrOaQ,G,WAMnB,WACEC,EACAC,EACAC,EACAnD,GACC,0BAVIiD,UAAqB,GAU1B,KATKC,YAAuB,GAS5B,KARKC,WAAsB,GAQ3B,KAPKnD,SAAoB,EAQzBoD,KAAKH,UAAYA,EACjBG,KAAKF,YAAcA,EACnBE,KAAKD,WAAaA,EAClBC,KAAKpD,SAAWA,E,2CAGlB,WACE,MACGqD,gDACDD,KAAKH,UACLI,+B,4BAIJ,WACE,MAAM,GAAN,OAAUC,KAAKC,MAAOH,KAAKpD,SAAsB,IAAjD,YACyD,KAArDoD,KAAKpD,SAAsB,IAAIwD,WAAWC,OACxC,IAAQL,KAAKpD,SAAsB,GAClCoD,KAAKpD,SAAsB,GAHlC,a,KC3BiB0D,G,WAMnB,WACET,EACA9B,EACAhD,EACA6B,GACC,0BAVIiD,UAAqB,GAU1B,KATK9B,SAAoB,EASzB,KARKhD,MAAiB,GAQtB,KAPK6B,SAAoB,EAQzBoD,KAAKH,UAAYA,EACjBG,KAAKjC,SAAWA,EAChBiC,KAAKjF,MAAQA,EACbiF,KAAKpD,SAAWA,E,mDAGlB,WACE,MAAM,GAAN,OAAUsD,KAAKC,MAAOH,KAAKpD,SAAsB,IAAjD,YACyD,KAArDoD,KAAKpD,SAAsB,IAAIwD,WAAWC,OACxC,IAAQL,KAAKpD,SAAsB,GAClCoD,KAAKpD,SAAsB,GAHlC,a,KChBiB2D,G,sGACnB,SAAuBC,GACrB,OAAO,IAAIC,QAAJ,uCAA0B,WAAOC,EAASC,GAAhB,eAAAC,EAAA,+EAEMC,MAAM,GAAD,OACnCZ,0CADmC,OACIA,0BADJ,qBAC0DO,GAChG,CACEM,OAAQ,MACRC,QAAS,IAAIC,QAAQ,MAEvBC,MAAK,SAACC,GAAD,OACLA,EAASC,OAAOF,MAAK,SAACG,GAEpB,OADAC,QAAQC,IAAIF,EAAcG,MACnBH,EAAcG,KAAKC,KACxB,SAACC,GAAD,OACE,IAAI7B,GACF6B,EAAY,UACZA,EAAY,MACZA,EAAY,OAAZ,KACAC,SAASD,EAAY,oBAjBF,OAEvBE,EAFuB,OAsB7BjB,EAAQiB,GAtBqB,gDAwB7BhB,EAAO,IAAIiB,MAAJ,qCAAwC,KAAMC,WAxBxB,yDAA1B,2D,+BA6BT,SAAyBC,GACvB,OAAO,IAAIrB,QAAJ,uCAA0B,WAAOC,EAASC,GAAhB,eAAAC,EAAA,+EAEMC,MAAM,GAAD,OACnCZ,0CADmC,OACI6B,GAC1C,CACEhB,OAAQ,MACRC,QAAS,IAAIC,QAAQ,MAEvBC,MAAK,SAACC,GAAD,OACLA,EAASC,OAAOF,MAAK,SAACc,GAEpB,OADAV,QAAQC,IAAIS,EAAcR,MACnBQ,EAAcR,KAAKC,KACxB,SAACQ,GAAD,OACE,IAAI1B,GACF0B,EAAY,GACZA,EAAY,eACZA,EAAY,MACZN,SAASM,EAAY,oBAjBF,OAEvBC,EAFuB,OAsB7BvB,EAAQuB,GAtBqB,gDAwB7BtB,EAAO,IAAIiB,MAAJ,qCAAwC,KAAMC,WAxBxB,yDAA1B,6D,kCChCLtH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyH,eAAgB,CACdvH,KAAM,UACNwH,cAAe,SACfC,OAAQ,eACRC,OAAQ,qBACRC,gBAAiB,cAEnBC,yBAA0B,CAAEnH,MAAO,MAAOiH,OAAQ,GAClDG,aAAc,CACZpH,MAAO,MACPD,OAAQ,GACRkH,OAAQ,qBACRvH,MAAO,UACPmD,WAAY,cAQD,SAASwE,GAAT,GAEA,IADbC,EACY,EADZA,yBAEMnF,EAAUhD,KAChB,EAA8CmD,mBAAiB,IAA/D,mBAAOiF,EAAP,KAAwBC,EAAxB,KAEA,OACE,kBAACC,GAAA,EAAD,CAAOhF,UAAWN,EAAQ2E,gBACxB,kBAACY,GAAA,EAAD,CACEC,MAAM,6BACNjE,QAAQ,SACRjB,UAAWN,EAAQgF,yBACnBS,MAAOL,EACPM,SAAU,SAACC,GACTN,EAAmBM,EAAMC,OAAOH,QAElCI,WAAY,SAACF,GACO,UAAdA,EAAM1D,KAAiBkD,EAAyBC,MAGxD,kBAACU,GAAA,EAAD,CACEvI,MAAM,UACN+C,UAAWN,EAAQiF,aACnBnE,QAAS,WACPqE,EAAyBC,KAJ7B,W,4CCrCApI,GAAYC,YAAW,CAC3BE,KAAM,CACJ4I,SAAU,IACVlB,OAAQ,SACR7F,WAAY,OACZgH,UAAW,mCACX,UAAW,CACTA,UAAW,yCAEblJ,WAAY,aAaD,SAASmJ,GAAT,GAOA,IANb3D,EAMY,EANZA,UACA4D,EAKY,EALZA,SACA1I,EAIY,EAJZA,MACA2I,EAGY,EAHZA,UACAC,EAEY,EAFZA,UACAC,EACY,EADZA,eAEMrG,EAAUhD,KAEhB,OACE,kBAACsJ,GAAA,EAAD,CAAMrE,IAAKK,EAAWhC,UAAWN,EAAQ7C,KAAM2D,QAASuF,GACtD,kBAACE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,UAAU,MAAMC,IAAKlJ,EAAOmJ,MAAOT,EAAU1I,MAAOA,IAC/D,kBAACoJ,GAAA,EAAD,KACE,kBAAC3F,EAAA,EAAD,CACEM,QAAQ,YACRkF,UAAU,IACVhG,MAAO,CAAE3D,WAAY,UAAW+J,WAAY,SAE3CrJ,GAEH,kBAACyD,EAAA,EAAD,CACEM,QAAQ,YACRkF,UAAU,IACVhG,MAAO,CAAE3D,WAAY,UAAW+J,WAAY,SAE3CV,GAEH,kBAAClF,EAAA,EAAD,CACEM,QAAQ,YACRkF,UAAU,IACVhG,MAAO,CAAE3D,WAAY,UAAW+J,WAAY,SAE3CT,M,sDCnDPpJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJM,SAAU,EACVI,MAAO,OACPN,MAAO,UAETuJ,cAAe,CACbpI,QAAS,YAUE,SAASqI,GAAT,GAAgE,IAA3CC,EAA0C,EAA1CA,OAAeC,GAA2B,EAAlCzJ,MAAkC,EAA3ByJ,cAC3CjH,EAAUhD,KAChB,OACE,kBAACkK,GAAA,EAAD,CACE9G,KAAM4G,EACNG,QAASF,EACTG,kBAAgB,oBAChB9G,UAAWN,EAAQ7C,MAEnB,kBAACkK,GAAA,EAAD,CAAaC,GAAG,qBAAhB,cACA,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,gCAEA,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTxJ,QAAS,EACToC,UAAWN,EAAQ8G,cACnBa,QAAQ,UAER,kBAACF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJtH,MAAO,CAAE5C,MAAO,IAAKD,OAAQ,IAAKmH,gBAAiB,WAGrD,kBAAC0C,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJtH,MAAO,CAAE5C,MAAO,IAAKD,OAAQ,IAAKmH,gBAAiB,WAIvD,kBAACiD,GAAA,EAAD,KACE,kBAAClC,GAAA,EAAD,CAAQhF,QAASmG,EAAc1J,MAAM,WAArC,YCzDV,IAAMP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJM,SAAU,EACVI,MAAO,OACPoK,UAAW,OACXC,UAAW,SACX7K,gBAAiB,4CACjBU,UAAW,SACXR,MAAO,UAETuJ,cAAe,CACbpI,QAAS,YAIE,SAASyJ,KACtB,IAAMnI,EAAUhD,KAChB,EAA4BmD,mBAAuB,IAAnD,mBAAOiE,EAAP,KAAegE,EAAf,KACA,EAA0CjI,qBAA1C,mBAAOkI,EAAP,KAAsBC,EAAtB,KACA,EAAkCnI,oBAAkB,GAApD,mBAAOoI,EAAP,KAAkBC,EAAlB,KACA,EAAwCrI,mBAAiB,IAAzD,mBAAOsI,EAAP,KAAqBC,EAArB,KACA,EACEvI,oBAAkB,GADpB,mBAAOwI,EAAP,KAA4BC,EAA5B,KAEA,EAA8CzI,oBAAkB,GAAhE,mBAAO0I,EAAP,KAAwBC,EAAxB,KARiC,4CAUjC,WAA8C7F,GAA9C,eAAAI,EAAA,kEAESJ,EAAa8F,OAFtB,wDAGIP,GAAa,GAHjB,SAKYxF,GAAoBgG,gBAAgB/F,GALhD,UAIUgG,EAJV,OAMIT,GAAa,IAETS,EAAW,MARnB,uBASMb,EAAU,IAEJ,IAAI/D,MAAJ,yCAE8B4E,EAAW,MAAX,UAb1C,QAgBMnF,QAAQC,IAAIkF,GAEZb,EAAUa,GAlBhB,0DAqBIP,EAAgB,iDAAD,OACoC,KAAMpE,UAEzDsE,GAAuB,GAxB3B,2DAViC,sBAsCjC,OACE,oCACGL,GAAa,kBAACW,EAAA,EAAD,MACd,yBAAK5I,UAAWN,EAAQ7C,KAAMsD,MAAO,CAAErD,KAAM,IAC3C,kBAAC8H,GAAD,CACEC,yBA3CyB,8CA6C3B,kBAACsC,EAAA,EAAD,CACEC,WAAS,EACTxJ,QAAS,EACToC,UAAWN,EAAQ8G,cACnBa,QAAQ,UAEPvD,GACCA,EAAOH,KAAI,SAACzG,GAAD,OACT,kBAACiK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC9B,GAAD,CACEhE,IAAKzE,EAAM8E,UACXA,UAAW9E,EAAM8E,UACjB4D,SAAU1I,EAAM0I,SAChB1I,MAAOA,EAAM+E,YACb4D,UAAS,aAAQ3I,EAAMgF,YACvB4D,UAAW5I,EAAM2L,iBACjB9C,eAAgB,WACdiC,EAAiB9K,GACjBsL,GAAmB,YAQjC,kBAAC/B,GAAD,CACEC,OAAQ6B,EACRrL,MAAO6K,EACPpB,aAAc,kBAAM6B,GAAmB,MAGzC,kBAACM,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDnJ,KAAMuI,EACNa,iBAAkB,IAClBrC,QAAS,kBAAMyB,GAAuB,KAEtC,kBAACa,EAAA,EAAD,CAAOtC,QAAS,kBAAMyB,GAAuB,IAAQc,SAAS,SAC3DjB,KCvEIkB,OA5Bf,WACE,OACE,kBAACC,EAAA,EAAD,CAAe1M,MAAOlB,GACpB,kBAAC6N,EAAA,EAAD,MACA,yBACEpJ,MAAO,CACLrC,QAAS,OACT0L,cAAe,SACflM,OAAQ,QACRmM,SAAU,WAGZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAAClK,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkK,KAAK,IAAIC,OAAK,GACnB,kBAAC9B,GAAD,OAEF,kBAAC,IAAD,CAAO6B,KAAK,iBClBJE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNxG,QAAQC,IAAI,wBACZD,QAAQC,IAAIrB,cACZoB,QAAQC,IAAI,6CACZD,QAAQC,IAAIrB,2BAEZ6H,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpH,MAAK,SAACqH,GACLA,EAAaC,gBAEdC,OAAM,SAACxO,GACNqH,QAAQrH,MAAMA,EAAM6H,c","file":"static/js/main.654a4aae.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport const deezerAppTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#0033A1',\r\n      main: '#0033A1',\r\n      dark: '#0033A1',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      light: '#00A1E0',\r\n      main: '#00A1E0',\r\n      dark: '#00A1E0',\r\n      contrastText: '#000'\r\n    },\r\n    error: {\r\n      light: '#DE3831',\r\n      main: '#DE3831',\r\n      dark: '#DE3831',\r\n      contrastText: '#000'\r\n    },\r\n    warning: {\r\n      light: '#FF681D',\r\n      main: '#FF681D',\r\n      dark: '#FF681D',\r\n      contrastText: '#000'\r\n    },\r\n    info: {\r\n      light: '#FFFFFF',\r\n      main: '#FFFFFF',\r\n      dark: '#FFFFFF',\r\n      contrastText: '#000'\r\n    },\r\n    success: {\r\n      light: '#00AD6C',\r\n      main: '#00AD6C',\r\n      dark: '#00AD6C',\r\n      contrastText: '#000'\r\n    }\r\n  },\r\n\r\n  typography: {\r\n    fontFamily: ['Benton Sans', 'Roboto'].join(',')\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    backgroundImage: 'linear-gradient(90deg, #0033A1, #00A1E0);',\r\n    marginBottom: 4,\r\n    color: 'yellow'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    paddingLeft: '2em'\r\n  },\r\n  imageIcon: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  iconRoot: {\r\n    textAlign: 'center',\r\n    width: '1.5em',\r\n    height: '1.5em'\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: 'none'\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    color: 'whitesmoke'\r\n  },\r\n  drawerPaper: {\r\n    backgroundImage:\r\n      'linear-gradient(to bottom, #0033a1, #0037ad, #003bb9, #0140c6, #0244d2);',\r\n    width: drawerWidth,\r\n    color: 'whitesmoke'\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n    color: 'whitesmoke',\r\n    letterSpacing: 3\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  icon: {\r\n    color: 'whitesmoke'\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'whitesmoke' //theme.palette.text.primary\r\n  }\r\n}));\r\n\r\nexport default function DeezerAppBar(props: any) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <AppBar\r\n          position=\"static\"\r\n          style={{\r\n            background: 'transparent',\r\n            color: 'yellow'\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            <Icon classes={{ root: classes.iconRoot }}></Icon>\r\n            <Typography className={classes.title}>\r\n              <img\r\n                className={classes.imageIcon}\r\n                style={{ width: '10rem' }}\r\n                src=\"../../../images/deezer.png\"\r\n              />\r\n            </Typography>\r\n            <>\r\n              <IconButton\r\n                aria-label=\"2 consesus requests awaiting approval\"\r\n                color=\"inherit\"\r\n              >\r\n                <Badge badgeContent={2} color=\"primary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton edge=\"end\" aria-haspopup=\"true\" color=\"inherit\">\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <Icon classes={{ root: classes.iconRoot }}></Icon>\r\n\r\n          <Typography\r\n            variant=\"button\"\r\n            display=\"block\"\r\n            gutterBottom\r\n            style={{ paddingRight: '3rem', color: 'yellow' }}\r\n          >\r\n            |||||||| Menu\r\n          </Typography>\r\n\r\n          <IconButton\r\n            style={{ paddingRight: '3rem', color: 'yellow' }}\r\n            onClick={handleDrawerClose}\r\n          >\r\n            {theme.direction === 'ltr' ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key=\"Notifications\" color=\"white\">\r\n            <ListItemIcon className={classes.icon}>\r\n              <NotificationsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Search\" />\r\n          </ListItem>\r\n          <Link to=\"/\" className={classes.link}>\r\n            <ListItem button key=\"search\">\r\n              <ListItemIcon className={classes.icon}>\r\n                <CardGiftcardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Searc\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/artists\" className={classes.link}>\r\n            <ListItem button key=\"artists\">\r\n              <ListItemIcon className={classes.icon}>\r\n                <ThumbUpIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Artists\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to=\"/albums\" className={classes.link}>\r\n            <ListItem button key=\"albums\">\r\n              <ListItemIcon className={classes.icon}>\r\n                <AttachMoneyIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Albums\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","export default class Title {\r\n  public uniqueKey? = <string>'';\r\n  public description? = <string>'';\r\n  public artistName? = <string>'';\r\n  public duration? = <number>0;\r\n\r\n  constructor(\r\n    uniqueKey: string,\r\n    description: string,\r\n    artistName: string,\r\n    duration: number\r\n  ) {\r\n    this.uniqueKey = uniqueKey;\r\n    this.description = description;\r\n    this.artistName = artistName;\r\n    this.duration = duration;\r\n  }\r\n\r\n  get imageUrl(): string {\r\n    return (\r\n      (process.env.REACT_APP_DEEZER_IMAGE_URL_PREFIX as string) +\r\n      this.uniqueKey +\r\n      process.env.REACT_APP_DEEZER_IMAGE_URL_SUFFIX\r\n    );\r\n  }\r\n\r\n  get formatedDuration(): string {\r\n    return `${Math.round((this.duration as number) / 60)}:${\r\n      ((this.duration as number) % 60).toString().length === 1\r\n        ? '0' + ((this.duration as number) % 60)\r\n        : (this.duration as number) % 60\r\n    } mins`;\r\n  }\r\n}\r\n","export default class Track {\r\n  public uniqueKey? = <string>'';\r\n  public position? = <number>0;\r\n  public title? = <string>'';\r\n  public duration? = <number>0;\r\n\r\n  constructor(\r\n    uniqueKey: string,\r\n    position: number,\r\n    title: string,\r\n    duration: number\r\n  ) {\r\n    this.uniqueKey = uniqueKey;\r\n    this.position = position;\r\n    this.title = title;\r\n    this.duration = duration;\r\n  }\r\n\r\n  get formatedDuration(): string {\r\n    return `${Math.round((this.duration as number) / 60)}:${\r\n      ((this.duration as number) % 60).toString().length === 1\r\n        ? '0' + ((this.duration as number) % 60)\r\n        : (this.duration as number) % 60\r\n    } mins`;\r\n  }\r\n}\r\n","import Title from '../model/Title';\r\nimport Track from '../model/Track';\r\n\r\nexport default class DeezerApiHttpClient {\r\n  static searchForTitles(searchString: string): Promise<Array<Title>> {\r\n    return new Promise<Array<Title>>(async (resolve, reject) => {\r\n      try {\r\n        const titles: Array<Title> = await fetch(\r\n          `${process.env.REACT_APP_CORS_PROXY_URL}${process.env.REACT_APP_DEEZER_API_BASE_URL}/search?q=${searchString}`,\r\n          {\r\n            method: 'GET',\r\n            headers: new Headers({})\r\n          }\r\n        ).then((response) =>\r\n          response.json().then((rawTitlesData) => {\r\n            console.log(rawTitlesData.data);\r\n            return rawTitlesData.data.map(\r\n              (rawTitleData: any) =>\r\n                new Title(\r\n                  rawTitleData['md5_image'] as string,\r\n                  rawTitleData['title'] as string,\r\n                  rawTitleData['artist']['name'] as string,\r\n                  parseInt(rawTitleData['duration']) as number\r\n                )\r\n            );\r\n          })\r\n        );\r\n        resolve(titles);\r\n      } catch (error) {\r\n        reject(new Error(`Unable to call Deezer API. ${error.message}`));\r\n      }\r\n    });\r\n  }\r\n\r\n  static getTracksForAlbum(tracksUrl: string): Promise<Array<Track>> {\r\n    return new Promise<Array<Track>>(async (resolve, reject) => {\r\n      try {\r\n        const tracks: Array<Track> = await fetch(\r\n          `${process.env.REACT_APP_CORS_PROXY_URL}${tracksUrl}`,\r\n          {\r\n            method: 'GET',\r\n            headers: new Headers({})\r\n          }\r\n        ).then((response) =>\r\n          response.json().then((rawTracksData) => {\r\n            console.log(rawTracksData.data);\r\n            return rawTracksData.data.map(\r\n              (rawTrackData: any) =>\r\n                new Track(\r\n                  rawTrackData['id'] as string,\r\n                  rawTrackData['track_position'] as number,\r\n                  rawTrackData['title'] as string,\r\n                  parseInt(rawTrackData['duration']) as number\r\n                )\r\n            );\r\n          })\r\n        );\r\n        resolve(tracks);\r\n      } catch (error) {\r\n        reject(new Error(`Unable to call Deezer API. ${error.message}`));\r\n      }\r\n    });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Paper, TextField, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paperContainer: {\r\n    flex: '1 1 80%',\r\n    verticalAlign: 'center',\r\n    margin: '.5rem 1.6rem',\r\n    border: '0px dotted #00A1E0',\r\n    backgroundColor: 'whitesmoke'\r\n  },\r\n  searchCriterionTextField: { width: '80%', border: 0 },\r\n  searchButton: {\r\n    width: '20%',\r\n    height: 56,\r\n    border: '2px dotted #00A1E0',\r\n    color: '#00A1E0',\r\n    background: 'yellow'\r\n  }\r\n}));\r\n\r\ninterface propTypes {\r\n  searchButtonClickHandler: (searchCriterion: string) => void;\r\n}\r\n\r\nexport default function FindTitlesView({\r\n  searchButtonClickHandler\r\n}: propTypes) {\r\n  const classes = useStyles();\r\n  const [searchCriterion, setSearchCriterion] = useState<string>('');\r\n\r\n  return (\r\n    <Paper className={classes.paperContainer}>\r\n      <TextField\r\n        label=\"Type here to find music...\"\r\n        variant=\"filled\"\r\n        className={classes.searchCriterionTextField}\r\n        value={searchCriterion}\r\n        onChange={(event) => {\r\n          setSearchCriterion(event.target.value);\r\n        }}\r\n        onKeyPress={(event) => {\r\n          if (event.key === 'Enter') searchButtonClickHandler(searchCriterion);\r\n        }}\r\n      />\r\n      <Button\r\n        color=\"primary\"\r\n        className={classes.searchButton}\r\n        onClick={() => {\r\n          searchButtonClickHandler(searchCriterion);\r\n        }}\r\n      >\r\n        Search\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 240,\r\n    margin: '0 auto',\r\n    transition: '0.3s',\r\n    boxShadow: '0 8px 40px -12px rgba(0,0,0,0.3)',\r\n    '&:hover': {\r\n      boxShadow: '0 16px 70px -12.125px rgba(0,0,0,0.3)'\r\n    },\r\n    fontFamily: 'calibri'\r\n  }\r\n});\r\n\r\ninterface propTypes {\r\n  uniqueKey: string;\r\n  imageUrl: string;\r\n  title: string;\r\n  subtitle1: string;\r\n  subtitle2: string;\r\n  onClickHandler: () => void;\r\n}\r\n\r\nexport default function CardView({\r\n  uniqueKey,\r\n  imageUrl,\r\n  title,\r\n  subtitle1,\r\n  subtitle2,\r\n  onClickHandler\r\n}: propTypes) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card key={uniqueKey} className={classes.root} onClick={onClickHandler}>\r\n      <CardActionArea>\r\n        <CardMedia component=\"img\" alt={title} image={imageUrl} title={title} />\r\n        <CardContent>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            component=\"p\"\r\n            style={{ fontFamily: 'calibri', fontWeight: 'bold' }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            component=\"p\"\r\n            style={{ fontFamily: 'calibri', fontWeight: 'bold' }}\r\n          >\r\n            {subtitle1}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            component=\"p\"\r\n            style={{ fontFamily: 'calibri', fontWeight: 'bold' }}\r\n          >\r\n            {subtitle2}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Title from '../model/Title';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { title } from 'process';\r\nimport { Height } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    color: 'yellow'\r\n  },\r\n  gridContainer: {\r\n    padding: '0rem'\r\n  }\r\n}));\r\n\r\ninterface propTypes {\r\n  isOpen: boolean;\r\n  title: Title;\r\n  closeHandler: () => void;\r\n}\r\n\r\nexport default function AlbumView({ isOpen, title, closeHandler }: propTypes) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      onClose={closeHandler}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      className={classes.root}\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Album Info</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>OUT OF TIME .... SORRY!</DialogContentText>\r\n\r\n        <Grid\r\n          container\r\n          spacing={4}\r\n          className={classes.gridContainer}\r\n          justify=\"center\"\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            style={{ width: 100, height: 100, backgroundColor: 'blue`' }}\r\n          ></Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={4}\r\n            style={{ width: 100, height: 100, backgroundColor: 'red`' }}\r\n          ></Grid>\r\n        </Grid>\r\n\r\n        <DialogActions>\r\n          <Button onClick={closeHandler} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Grid, LinearProgress, Snackbar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert } from '@material-ui/lab';\r\nimport DeezerApiHttpClient from '../services/DeezerApiHttpClient';\r\nimport FindTitlesView from './FindTitlesView';\r\nimport CardView from './CardView';\r\nimport Title from '../model/Title';\r\nimport AlbumView from './AlbumView';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    backgroundImage: 'linear-gradient(90deg, #0033A1, #00A1E0);',\r\n    textAlign: 'center',\r\n    color: 'yellow'\r\n  },\r\n  gridContainer: {\r\n    padding: '2rem'\r\n  }\r\n}));\r\n\r\nexport default function MainView() {\r\n  const classes = useStyles();\r\n  const [titles, setTitles] = useState<Array<Title>>([]);\r\n  const [selectedTitle, setSelectedTitle] = useState<Title>();\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [errorMessage, setErrorMessage] = useState<string>('');\r\n  const [isErrorSnackbarOpen, setIsErrorSnackbarOpen] =\r\n    useState<boolean>(false);\r\n  const [isAlbumViewOpen, setIsAlbumViewOpen] = useState<boolean>(false);\r\n\r\n  async function findTitlesMatchingSearchString(searchString: string) {\r\n    try {\r\n      if (!searchString.trim()) return;\r\n      setIsLoading(true);\r\n      const titlesFound: Array<Title> =\r\n        await DeezerApiHttpClient.searchForTitles(searchString);\r\n      setIsLoading(false);\r\n      //@ts-ignore\r\n      if (titlesFound['error']) {\r\n        setTitles([]);\r\n        //@ts-ignore\r\n        throw new Error(\r\n          //@ts-ignore\r\n          `Unable to call the Deezer API. ${titlesFound['error']['message']}`\r\n        );\r\n      } else {\r\n        console.log(titlesFound);\r\n        //@ts-ignore\r\n        setTitles(titlesFound);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\r\n        `An error occured whilst searching for titles. ${error.message}`\r\n      );\r\n      setIsErrorSnackbarOpen(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LinearProgress />}\r\n      <div className={classes.root} style={{ flex: 9 }}>\r\n        <FindTitlesView\r\n          searchButtonClickHandler={findTitlesMatchingSearchString}\r\n        />\r\n        <Grid\r\n          container\r\n          spacing={4}\r\n          className={classes.gridContainer}\r\n          justify=\"center\"\r\n        >\r\n          {titles &&\r\n            titles.map((title) => (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <CardView\r\n                  key={title.uniqueKey as string}\r\n                  uniqueKey={title.uniqueKey as string}\r\n                  imageUrl={title.imageUrl}\r\n                  title={title.description as string}\r\n                  subtitle1={`by ${title.artistName}`}\r\n                  subtitle2={title.formatedDuration as string}\r\n                  onClickHandler={() => {\r\n                    setSelectedTitle(title);\r\n                    setIsAlbumViewOpen(true);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            ))}\r\n        </Grid>\r\n      </div>\r\n\r\n      <AlbumView\r\n        isOpen={isAlbumViewOpen}\r\n        title={selectedTitle as Title}\r\n        closeHandler={() => setIsAlbumViewOpen(false)}\r\n      />\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        open={isErrorSnackbarOpen}\r\n        autoHideDuration={10000}\r\n        onClose={() => setIsErrorSnackbarOpen(false)}\r\n      >\r\n        <Alert onClose={() => setIsErrorSnackbarOpen(false)} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { deezerAppTheme } from './theme/deezer-app-theme';\r\nimport DeezerAppBar from './components/DeezerAppBar';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport MainView from './components/MainView';\r\n//import ArtistView from './components/ArtistView';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={deezerAppTheme}>\r\n      <CssBaseline />\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100vh',\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        <Router>\r\n          <Route path=\"/\">\r\n            <DeezerAppBar />\r\n          </Route>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <MainView />\r\n            </Route>\r\n            <Route path=\"/artist\">{/*<ArtistView />*/}</Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'fontsource-roboto';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconsole.log('process.env.NODE_ENV');\r\nconsole.log(process.env.NODE_ENV);\r\nconsole.log('process.env.REACT_APP_DEEZER_API_BASE_URL');\r\nconsole.log(process.env.REACT_APP_DEEZER_API_BASE_URL);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}