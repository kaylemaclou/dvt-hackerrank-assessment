// import React, { useState } from 'react';
// import Button from '@material-ui/core/Button';
// import Dialog from '@material-ui/core/Dialog';
// import DialogActions from '@material-ui/core/DialogActions';
// import DialogContent from '@material-ui/core/DialogContent';
// import DialogContentText from '@material-ui/core/DialogContentText';
// import DialogTitle from '@material-ui/core/DialogTitle';
// import { MenuItem, FormControlLabel } from '@material-ui/core';
// import { makeStyles } from '@material-ui/core/styles';

// import { Formik, Form, Field } from 'formik';
// import { TextField, Switch } from 'formik-material-ui';
// import { DatePicker } from 'formik-material-ui-pickers';
// import { MuiPickersUtilsProvider } from '@material-ui/pickers';
// import DateFnsUtils from '@date-io/date-fns';

// const useStyles = makeStyles({});

// export default function TransactionView(props: any) {
//   const classes = useStyles();
//   interface FormValues {
//     billingYear: number | string;
//     billingMonth: number | string;
//     contractID: number | string;
//     doaApprover: string;
//     documentDate: Date | string;
//     postingDate: Date | string;
//     quantity: number | string;
//     taxJurisdictionCountryID: number | string;
//     transactionCurrencyID: number | string;
//     transactionTypeID: number | string;
//     unitPrice: number | string;
//   }

//   return (
//     <div>
//       <Dialog
//         open={props.isOpen}
//         onClose={props.handleClose}
//         aria-labelledby="form-dialog-title"
//       >
//         <DialogTitle id="form-dialog-title">
//           {props.addOrEditMode === 'ADD'
//             ? 'New Transaction'
//             : 'Edit Transaction'}
//         </DialogTitle>
//         <DialogContent>
//           <DialogContentText>
//             {props.addOrEditMode === 'ADD'
//               ? 'Enter the details of the new transaction:'
//               : `Edit the details of the transaction ${
//                   props.transaction && props.transaction.ID
//                 }:`}
//           </DialogContentText>

//           <Formik
//             initialValues={{
//               billingYear: props.transaction
//                 ? props.transaction.BillingYear
//                 : undefined,
//               billingMonth: props.transaction
//                 ? props.transaction.BillingMonth
//                 : undefined,
//               contractID: props.transaction
//                 ? props.transaction.ContractID
//                 : undefined,
//               doaApprover: props.transaction
//                 ? props.transaction.DoaApprover
//                 : undefined,
//               documentDate: props.transaction
//                 ? props.transaction.DocumentDate
//                 : new Date(),
//               postingDate: props.transaction
//                 ? props.transaction.PostingDate
//                 : undefined,
//               quantity: props.transaction
//                 ? props.transaction.Quantity
//                 : undefined,
//               taxJurisdictionCountryID: props.transaction
//                 ? props.transaction.TaxJurisdictionCountryID
//                 : undefined,
//               transactionCurrencyID: props.transaction
//                 ? props.transaction.TransactionCurrencyID
//                 : undefined,
//               transactionTypeID: props.transaction
//                 ? props.transaction.TransactionTypeID
//                 : undefined,
//               unitPrice: props.transaction
//                 ? props.transaction.UnitPrice
//                 : undefined
//             }}
//             validate={(values) => {
//               const errors: Partial<FormValues> = {};
//               if (!values.billingYear) {
//                 errors.billingYear = 'Required';
//               } else if (
//                 values.billingYear < 2020 ||
//                 values.billingYear > 2120
//               ) {
//                 errors.billingYear = 'Must be in the range 2020 to 2120';
//               }
//               if (!values.billingMonth) {
//                 errors.billingMonth = 'Required';
//               } else if (values.billingMonth < 1 || values.billingMonth > 12) {
//                 errors.billingMonth = 'Must be in the range 1 to 12';
//               }
//               if (!values.contractID) {
//                 errors.contractID = 'Required';
//               }
//               if (!values.doaApprover) {
//                 errors.doaApprover = 'Required';
//               } else if (
//                 !/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-](?:[a-z0-9-]*[a-z0-9])?/.test(
//                   values.doaApprover
//                 )
//               ) {
//                 errors.doaApprover = 'Must be a valid email address';
//               }
//               if (!values.documentDate) {
//                 errors.documentDate = 'Required';
//               }
//               // if (!values.postingDate) {
//               //   errors.postingDate = 'Required';
//               // }
//               if (!values.quantity) {
//                 errors.quantity = 'Required';
//               }
//               if (!values.taxJurisdictionCountryID) {
//                 errors.taxJurisdictionCountryID = 'Required';
//               }
//               if (!values.transactionCurrencyID) {
//                 errors.transactionCurrencyID = 'Required';
//               }
//               if (!values.transactionTypeID) {
//                 errors.transactionTypeID = 'Required';
//               }
//               if (!values.unitPrice) {
//                 errors.unitPrice = 'Required';
//               }
//               return errors;
//             }}
//             onSubmit={(values, { setSubmitting }) => {
//               const transaction = new Transaction(
//                 values.billingYear,
//                 values.billingMonth,
//                 values.contractID,
//                 values.doaApprover,
//                 values.documentDate,
//                 props.transaction ? props.transaction.ID : undefined,
//                 values.postingDate,
//                 values.quantity,
//                 values.taxJurisdictionCountryID,
//                 values.transactionCurrencyID,
//                 values.transactionTypeID,
//                 values.unitPrice
//               );
//               if (props.addOrEditMode === 'ADD')
//                 dispatch(addTransaction(transaction));
//               else if (props.addOrEditMode === 'EDIT')
//                 dispatch(updateTransaction(transaction));
//               setSubmitting(false);
//               console.log(JSON.stringify(values, null, 2));
//             }}
//           >
//             {({ submitForm, isSubmitting, touched, errors, values }) => (
//               <MuiPickersUtilsProvider utils={DateFnsUtils}>
//                 <Form>
//                   <Field
//                     component={TextField}
//                     name="contractID"
//                     type="text"
//                     select
//                     label="Contract Reference"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{ minWidth: '20rem', maxWidth: '32rem' }}
//                   >
//                     {contracts.map((contract) => (
//                       <MenuItem key={contract.ID} value={contract.ID}>
//                         {(contract &&
//                         contract.BillableItem &&
//                         contract.BillableItem.Name
//                           ? contract.BillableItem.Name
//                           : '') +
//                           ' - ' +
//                           (contract &&
//                           contract.ProviderProfitCentre &&
//                           contract.ProviderProfitCentre.Code
//                             ? contract.ProviderProfitCentre.Code
//                             : '') +
//                           ' - ' +
//                           (contract &&
//                           contract.RecipientCostCentre &&
//                           contract.RecipientCostCentre.Code
//                             ? contract.RecipientCostCentre.Code
//                             : '')}
//                       </MenuItem>
//                     ))}
//                   </Field>

//                   <Field
//                     component={TextField}
//                     name="transactionTypeID"
//                     type="text"
//                     select
//                     label="Transaction Type"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{ minWidth: '20rem', maxWidth: '32rem' }}
//                   >
//                     {transactionTypes.map((transactionType) => (
//                       <MenuItem
//                         key={transactionType.ID}
//                         value={transactionType.ID}
//                       >
//                         {transactionType.Name}
//                       </MenuItem>
//                     ))}
//                   </Field>

//                   <Field
//                     component={TextField}
//                     name="billingYear"
//                     type="number"
//                     label="Billing Year"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     inputProps={{ min: '2020', max: '2120', step: '1' }}
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{
//                       marginRight: '1rem',
//                       maxWidth: '45%'
//                     }}
//                   />

//                   <Field
//                     component={TextField}
//                     name="billingMonth"
//                     type="number"
//                     label="Billing Month"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     inputProps={{ min: '1', max: '12', step: '1' }}
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{ maxWidth: '45%' }}
//                   />

//                   <Field
//                     component={TextField}
//                     name="transactionCurrencyID"
//                     type="text"
//                     select
//                     label="Transaction Currency"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{ minWidth: '20rem', maxWidth: '32rem' }}
//                   >
//                     {currencies.map((currency) => (
//                       <MenuItem key={currency.ID} value={currency.ID}>
//                         {currency.IsoCode + ' - ' + currency.Name}
//                       </MenuItem>
//                     ))}
//                   </Field>

//                   <Field
//                     component={CurrencyTextField}
//                     name="unitPrice"
//                     label="Unit Price"
//                     value={values.unitPrice}
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     currencySymbol=""
//                     minimumValue="0.01"
//                     maximumValue="99999999.99"
//                     outputFormat="number"
//                     decimalCharacter="."
//                     digitGroupSeparator=","
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{
//                       marginRight: '1rem',
//                       maxWidth: '45%'
//                     }}
//                     onChange={(event: any, value: number) => {
//                       values.unitPrice = value;
//                     }}
//                   />

//                   <Field
//                     component={TextField}
//                     name="quantity"
//                     type="number"
//                     label="Quantity"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     inputProps={{ min: '1', max: '9999999', step: '1' }}
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{
//                       maxWidth: '45%'
//                     }}
//                   />

//                   <Field
//                     component={DatePicker}
//                     name="documentDate"
//                     type="text"
//                     label="Document Date"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     format="dd-MM-yyyy"
//                     minDate={new Date(2020, 1, 1)}
//                     maxDate={new Date(2099, 0, 1)}
//                     style={{
//                       marginBottom: '1rem',
//                       minWidth: '20rem',
//                       maxWidth: '32rem'
//                     }}
//                   />

//                   <Field
//                     component={TextField}
//                     name="taxJurisdictionCountryID"
//                     type="text"
//                     select
//                     label="Service Consumption Tax Jurisdiction"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{
//                       minWidth: '20rem',
//                       maxWidth: '32rem'
//                     }}
//                   >
//                     {countries.map((country) => (
//                       <MenuItem key={country.ID} value={country.ID}>
//                         {country.IsoAlpha2Code + ' - ' + country.Name}
//                       </MenuItem>
//                     ))}
//                   </Field>

//                   <Field
//                     component={TextField}
//                     name="doaApprover"
//                     type="email"
//                     label="DoA Approver"
//                     variant="outlined"
//                     margin="dense"
//                     required
//                     fullWidth
//                     InputLabelProps={{
//                       shrink: true
//                     }}
//                     style={{
//                       minWidth: '12rem',
//                       maxWidth: '93%'
//                     }}
//                   />
//                   <DialogActions>
//                     <Button onClick={props.closeHandler} color="primary">
//                       Cancel
//                     </Button>

//                     {props.addOrEditMode === 'ADD' ? (
//                       <Button onClick={submitForm} color="primary">
//                         Add
//                       </Button>
//                     ) : (
//                       <Button onClick={submitForm} color="primary">
//                         Save Changes
//                       </Button>
//                     )}
//                   </DialogActions>
//                 </Form>
//               </MuiPickersUtilsProvider>
//             )}
//           </Formik>
//         </DialogContent>
//       </Dialog>
//     </div>
//   );
// }
